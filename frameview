#!/usr/bin/python

import sys
import os
from lucidreader import LucidFile
import lucidreader
import frameplot
import numpy as np
from datetime import datetime
import noisemask
import Image
import Tkinter as tk
import ImageTk
import tds1_telemetry as telemetry

if len(sys.argv) < 2:
	print "USAGE: frameview filename (--noisemask)"
	sys.exit(1)

try:
	filename = sys.argv[1]
	lucidfile = LucidFile(filename)
except IOError:
	print "The file specified does not exist or cannot be read. Exiting..."
	sys.exit(1)
except:
	print "The data file specified is invalid (probably missing a header). Exitting."
	sys.exit(1)

def update_window(index):
	global root, in_main_loop
	frame = lucidfile.get_frame(index)

	if do_noise_mask:
		frame = noisemask.apply_noise_mask(noise_mask, frame)

	label_image = [None, None, None, None, None]
	img = [None, None, None, None, None]
	for i in range(5):
		if not frame.channels[i] == None:
			img[i] = ImageTk.PhotoImage(frameplot.get_image(frame.channels[i]))
			label_image[i] = tk.Label(root, image=img[i])
			label_image[i].place(x=(256*i) + 5*(i+1) ,y=5,width=256,height=256)
	frame_label_text.set("Frame " + str(index + 1) + " of " + str(lucidfile.num_frames))
	timestamp = frame.timestamp
	dt = datetime.fromtimestamp(timestamp).strftime("%d-%m-%Y %H:%M:%S")
	timestamp_label_text.set("Frame timestamp: " + dt)
	#Get TDS1 Position and plot map
	position = telemetry.get_position("TDS1.tle", timestamp)
	map_img = ImageTk.PhotoImage(telemetry.get_map(position.latitude, position.longitude))
	map_label = tk.Label(root, image = map_img, bg = "#333333")
	map_label.place(x = 940, y = 276)
	
	# Start main loop if not already running
	if not in_main_loop:
		root.mainloop()

def leftKey(arg):
	global index
	if index > 0:
		index -= 1
		update_window(index)
def rightKey(arg):
	global index
	#print "right"
	if index < lucidfile.num_frames:
		index += 1
		update_window(index)

try:
	index = int(sys.argv[2])
except:
	index = 0


root = tk.Tk()
root.geometry("1310x466")

do_noise_mask = False
if "--noisemask" in sys.argv:
	print "Generating noise mask"
	noise_mask = noisemask.generate_noise_mask(lucidfile, 10)
	do_noise_mask = True
	print noise_mask

root.title("LUCID Frame Viewer: " + filename)
root.resizable(0, 0)
root.bind('<Left>', leftKey)
root.bind('<Right>', rightKey)

bottom_frame = tk.Frame(root, bg = "#333333", width = 1310, height = 200)
bottom_frame.place(x = 0, y = 266)

frame_label_text = tk.StringVar()
timestamp_label_text = tk.StringVar()

file_label = tk.Label(root, text="File: " + filename, font=(None, 15), bg = "#333333", fg = "#ffffff")
file_label.place(x = 10, y = 320)
frame_label = tk.Label(root, textvariable=frame_label_text, font = (None, 11), bg = "#333333", fg = "#ffffff")
frame_label.place(x = 10, y = 350)
timestamp_label = tk.Label(root, textvariable=timestamp_label_text, font = (None, 11), bg = "#333333", fg = "#ffffff")
timestamp_label.place(x = 10, y = 370)

in_main_loop = False

update_window(0)